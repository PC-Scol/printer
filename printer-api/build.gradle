plugins {
    id 'java'
    id 'maven'
    id 'maven-publish'
    id 'io.spring.dependency-management'
    id 'signing'
}


dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
    }
}

configurations {
    apiArtifact // Artefact de l'API
    swaggerCodegen // Exécutable Swagger codegen-cli
}

dependencies {
    // Add dependency for Swagger Codegen CLI
    swaggerCodegen(group: 'io.swagger.codegen.v3', name: 'swagger-codegen-cli', version: "${swaggerCodegenCli3Version}") {
        transitive = false
    }

    // Compilation des classes java générées par swagger
    compileOnly 'javax.servlet:javax.servlet-api'
    compileOnly 'javax.validation:validation-api'
    compileOnly 'org.slf4j:slf4j-api'
    compileOnly "io.swagger:swagger-annotations:${swaggerAnnotationsVersion}"
    compileOnly 'com.fasterxml.jackson.core:jackson-databind'
    compileOnly 'org.springframework:spring-webmvc'

}

sourceSets {
    main {
        java {
            srcDir "$project.buildDir/generated/src/main/java"
        }
    }
}


task copyInputSpec(type: Copy) {
    from file("${projectDir}/yml/printer-api.yml").toString()
    into file("${buildDir}/swagger").toString()
}

def inputSpec = file("${buildDir}/swagger/printer-api.yml")

task("swaggerCodeGen", type: SwaggerCodeGenTaskV3) {
    group 'Source Generation'
    description 'Génère les sources de l\'API à partir du fichier yml.'
    dependsOn copyInputSpec

    apiFile = inputSpec
    lang = 'spring'
    configFile = file('swaggerCodeGenSpringConfig.json')
}
compileJava.dependsOn swaggerCodeGen

def apiArtifact = artifacts.add("apiArtifact", inputSpec) {
    type "yml"
}

signing {
    def signingKey = findProperty('signingKey') ?: System.getenv("signingKey")
    def signingPassword = findProperty('signingPassword') ?: System.getenv("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications
}

publishing {
    publications {
        api(MavenPublication) {
            groupId 'fr.pcscol.printer'
            artifactId 'printer-api'
            artifact apiArtifact
        }
    }
    repositories {
        maven {
            url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = findProperty('ossrhUserName') ?: System.getenv('ossrhUserName')
                password = findProperty('ossrhPassword') ?: System.getenv('ossrhPassword')
            }
        }
    }
}

tasks.withType(PublishToMavenRepository) {
    onlyIf {
        !version.endsWith('SNAPSHOT')
    }
}