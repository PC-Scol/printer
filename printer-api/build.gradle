import org.gradle.api.publish.maven.MavenPublication
import org.gradle.api.tasks.Copy

plugins {
    id 'java'
    id 'maven'
    id 'maven-publish'
    id 'io.spring.dependency-management'
    id 'signing'
}


dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
    }
}

configurations {
    // Artefacts des APIs
    apiArtifactV1
    apiArtifactV2
    swaggerCodegen // Exécutable Swagger codegen-cli
}

dependencies {
    // Add dependency for Swagger Codegen CLI
    swaggerCodegen(group: 'io.swagger.codegen.v3', name: 'swagger-codegen-cli', version: "${swaggerCodegenCli3Version}") {
        transitive = false
    }

    // Compilation des classes java générées par swagger
    compileOnly 'javax.servlet:javax.servlet-api'
    compileOnly 'javax.validation:validation-api'
    compileOnly 'org.slf4j:slf4j-api'
    compileOnly "io.swagger:swagger-annotations:${swaggerAnnotationsVersion}"
    compileOnly 'com.fasterxml.jackson.core:jackson-databind'
    compileOnly 'org.springframework:spring-webmvc'

}

sourceSets {
    main {
        java {
            srcDir "$project.buildDir/generated/src/main/java"
        }
    }
}


task copyInputSpecV1(type: Copy) {
    from file("${projectDir}/yml/printer-api-v1.yml").toString()
    into file("${buildDir}/swagger").toString()
}

task copyInputSpecV2(type: Copy) {
    from file("${projectDir}/yml/printer-api-v2.yml").toString()
    into file("${buildDir}/swagger").toString()
}

def inputSpecV1 = file("${buildDir}/swagger/printer-api-v1.yml")
def inputSpecV2 = file("${buildDir}/swagger/printer-api-v2.yml")

task swaggerCodeGenV1(type: SwaggerCodeGenTaskV3) {
    group 'Source Generation'
    description 'Génère les sources de l\'API à partir du fichier yml.'
    dependsOn copyInputSpecV1

    apiFile = inputSpecV1
    lang = 'spring'

    configFile = file('swaggerCodeGenV1.json')
}

task swaggerCodeGenV2(type: SwaggerCodeGenTaskV3) {
    group 'Source Generation'
    description 'Génère les sources de l\'API à partir du fichier yml.'
    dependsOn copyInputSpecV2

    apiFile = inputSpecV2
    lang = 'spring'
    configFile = file('swaggerCodeGenV2.json')
}

compileJava.dependsOn swaggerCodeGenV1
compileJava.dependsOn swaggerCodeGenV2

def apiArtifactV1 = artifacts.add("apiArtifactV1", inputSpecV1) {
    type "yml"
}

def apiArtifactV2 = artifacts.add("apiArtifactV2", inputSpecV2) {
    type "yml"
}

signing {
    def signingKey = findProperty('signingKey') ?: System.getenv("signingKey")
    def signingPassword = findProperty('signingPassword') ?: System.getenv("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications
}

publishing {
    publications {
        apiV1(MavenPublication) {

            groupId 'fr.pc-scol.printer'
            artifactId 'printer-api-v1'
            artifact apiArtifactV1

            pom {
                name = 'printer-api-v1'
                description = 'The printer service API V1 spec'
                url = 'https://github.com/PC-Scol/printer/'
                licenses {
                    license {
                        name = 'GNU Affero General Public License v3.0'
                        url = 'https://www.gnu.org/licenses/agpl-3.0.fr.html'
                    }
                }
                developers {
                    developer {
                        id = 'zaghdous'
                        name = 'Sabri ZAGHDOUDI'
                        email = 'sabri.zaghdoudi@pc-scol.fr'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:PC-Scol/printer.git'
                    url = 'https://github.com/PC-Scol/printer'
                }
            }
        }
        apiV2(MavenPublication) {

            groupId 'fr.pc-scol.printer'
            artifactId 'printer-api-v2'
            artifact apiArtifactV2

            pom {
                name = 'printer-api-v2'
                description = 'The printer service API V2 spec'
                url = 'https://github.com/PC-Scol/printer/'
                licenses {
                    license {
                        name = 'GNU Affero General Public License v3.0'
                        url = 'https://www.gnu.org/licenses/agpl-3.0.fr.html'
                    }
                }
                developers {
                    developer {
                        id = 'zaghdous'
                        name = 'Sabri ZAGHDOUDI'
                        email = 'sabri.zaghdoudi@pc-scol.fr'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:PC-Scol/printer.git'
                    url = 'https://github.com/PC-Scol/printer'
                }
            }
        }
    }
    repositories {
        maven {
            url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = findProperty('ossrhUserName') ?: System.getenv('ossrhUserName')
                password = findProperty('ossrhPassword') ?: System.getenv('ossrhPassword')
            }
        }
    }
}

tasks.withType(PublishToMavenRepository) {
    onlyIf {
        !version.endsWith('SNAPSHOT')
    }
}